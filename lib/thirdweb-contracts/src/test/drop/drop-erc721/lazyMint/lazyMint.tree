function lazyMint(
    uint256 _amount,
    string calldata _baseURIForTokens,
    bytes calldata _data
)
├── when called by a user without MINTER_ROLE
│   └── it should revert ✅
└── when called by a user with MINTER_ROLE
    ├── when _data.length == 0
    │   ├── when _amount is equal to 0
    │   │   └── it should revert ✅
    │   └── when _amount is greater than 0
    │       ├── it should push batchId (_startId + _amountToMint) to the batchIds array ✅
    │       ├── it should set baseURI[batchId] as _baseURIForTokens ✅
    │       └── it should emit TokensLazyMinted with the parameters: startId, startId + amount - 1, _baseURIForTokens, _data ✅
    └── when _data.length > 0
        ├── when _data invalid format
        │   └── it should revert ✅
        └── when _data valid format
            ├── it should decode _data into bytes memory encryptedURI and bytes32 provenanceHash ✅
            ├── when encryptedURI.length = 0
            │   ├── it should push batchId (_startId + _amountToMint) to the batchIds array ✅
            │   ├── it should set baseURI[batchId] as _baseURIForTokens ✅
            │   └── it should emit TokensLazyMinted with the parameters: startId, startId + amount - 1, _baseURIForTokens, _data ✅
            ├── when provenanceHash = ""
            │   ├── it should push batchId (_startId + _amountToMint) to the batchIds array ✅
            │   ├── it should set baseURI[batchId] as _baseURIForTokens ✅
            │   └── it should emit TokensLazyMinted with the parameters: startId, startId + amount - 1, _baseURIForTokens, _data ✅
            └── when encryptedURI.length > 0 and provenanceHash does not equal ""
                ├── it should set the encryptedData[batchId] equal to _data ✅
                ├── it should push batchId (_startId + _amountToMint) to the batchIds array ✅
                ├── it should set baseURI[batchId] as _baseURIForTokens ✅
                └── it should emit TokensLazyMinted with the parameters: startId, startId + amount - 1, _baseURIForTokens, _data ✅